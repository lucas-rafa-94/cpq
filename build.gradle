configurations {
	jaxb
}

buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'app'
version = ''
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

task genJaxb {
	ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
	ext.classesDir = "${buildDir}/classes/jaxb"
	ext.schemaCpqPart = "https://alpargatastest1.bigmachines.com/v2_0/receiver/parts?WSDL"
	
	outputs.dir classesDir

	doLast() {
		project.ant {
			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
					classpath: configurations.jaxb.asPath
			mkdir(dir: sourcesDir)
			mkdir(dir: classesDir)

			xjc(destdir: sourcesDir, schema: schemaCpqPart,
					package: "schemaCpqPart.wsdl") {
				arg(value: "-wsdl")
				produces(dir: sourcesDir, includes: "**/*.java")
			}
			


			javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
					debugLevel: "lines,vars,source",
					classpath: configurations.jaxb.asPath) {
				src(path: sourcesDir)
				include(name: "**/*.java")
				include(name: "*.java")
			}

			copy(todir: classesDir) {
				fileset(dir: sourcesDir, erroronmissingdir: false) {
					exclude(name: "**/*.java")
				}
			}
		}
	}
}
// end::wsdl[]

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	compile fileTree(include: ['*.jar'], dir: 'libs')
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.9.RELEASE'
	compile('org.springframework.boot:spring-boot-starter-web-services')
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.6'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.6'
	// https://mvnrepository.com/artifact/org.springframework.ws/spring-ws-security
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
	compile group: 'com.sun.jersey', name: 'jersey-client', version: '1.19.4'
	compile group: 'org.springframework.ws', name: 'spring-ws-security', version: '2.3.0.RELEASE'


	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile(files(genJaxb.classesDir).builtBy(genJaxb))
	jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"
}

bootJar {
	baseName = 'gpaofdi'
	version =  '0.1'

	from genJaxb.classesDir
}


task afterEclipseImport {
	dependsOn genJaxb
}